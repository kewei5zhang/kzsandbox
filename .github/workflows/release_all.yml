name: release_all
on: [push]

defaults:
  run:
    shell: bash
    working-directory: js/packages/backend

jobs:
  build_builder_image:
    name: Update builder Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/builder/.buildx-cache
          key: ${{ runner.os }}-buildx-builder-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-builder-
      - uses: docker/build-push-action@v3
        name: Build Image
        with:
          context: .
          file: builder.Dockerfile
          push: true
          cache-from: type=local,src=/tmp/builder/.buildx-cache
          cache-to: type=local,dest=/tmp/builder/.buildx-cache-new,mode=max
          tags: |
            keweizhang/builder
      - name: Move cache
        run: |
          rm -rf /tmp/builder/.buildx-cache
          mv /tmp/builder/.buildx-cache-new /tmp/builder/.buildx-cache
      # - name: Upload artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: builder
      #     path: /tmp/builder.tar
  build_runner_image:
    name: Build Runner Image
    runs-on: ubuntu-latest
    needs: [build_builder_image]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      # - name: Download artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: builder
      #     path: /tmp
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/runner/.buildx-cache
          key: ${{ runner.os }}-buildx-runner-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-runner-
      - name: Load Docker image
        run: |
          docker pull keweizhang/builder
          docker image ls -a
      - uses: docker/build-push-action@v3
        name: Build Image
        with:
          context: .
          file: js/packages/backend/backend.Dockerfile
          push: true
          cache-from: type=local,src=/tmp/runner/.buildx-cache
          cache-to: type=local,dest=/tmp/runner/.buildx-cache-new,mode=max
          tags: keweizhang/runner
      - name: Move cache
        run: |
          rm -rf /tmp/runner/.buildx-cache
          mv /tmp/runner/.buildx-cache-new /tmp/runner/.buildx-cache
  deploy_all_to_devnet:
    name: Deploy to Devnet
    needs: [build_runner_image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - release: acct-broker
            valuefile: ./devnet/acct-broker-values.yaml
          - release: acct-backfill-broker
            valuefile: ./devnet/acct-backfill-broker-values.yaml
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Deploy to EKS
        uses: ./.github/actions/deploy_eks
        with:
          tag: ${{ github.sha }}
          namespace: indexing-devnet
          release: ${{ matrix.release }}
          valuefile: ${{ matrix.valuefile }}
          working-directory: js/packages/backend
  deploy_cf_to_devnet:
    name: Deploy to Frontend Devnet
    needs: [deploy_all_to_devnet]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Mimic Deployment
      run: |
        echo "Deploying Frontend Devnet..."
  deploy_all_to_canary:
    name: Deploy to Canary
    needs: [build_runner_image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - release: acct-broker
            valuefile: ./mainnet/acct-broker-values.yaml
          - release: acct-backfill-broker
            valuefile: ./mainnet/acct-backfill-broker-values.yaml
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Deploy to EKS
        uses: ./.github/actions/deploy_eks
        with:
          tag: ${{ github.sha }}
          namespace: indexing-mainnet
          release: ${{ matrix.release }}
          valuefile: ${{ matrix.valuefile }}
          working-directory: js/packages/backend
  deploy_cf_to_canary:
    name: Deploy to Frontend Canary
    needs: [deploy_all_to_canary]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Mimic Deployment
      run: |
        echo "Deploying Frontend Canary ..."
  deploy_all_to_mainnet:
    name: Deploy to Mainnet
    needs: [build_runner_image]
    runs-on: ubuntu-latest
    environment: Production
    strategy:
      matrix:
        include:
          - release: acct-broker
            valuefile: ./mainnet/acct-broker-values.yaml
          - release: acct-backfill-broker
            valuefile: ./mainnet/acct-backfill-broker-values.yaml
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Deploy to EKS
        uses: ./.github/actions/deploy_eks
        with:
          tag: ${{ github.sha }}
          namespace: indexing-mainnet
          release: ${{ matrix.release }}
          valuefile: ${{ matrix.valuefile }}
          working-directory: js/packages/backend
  deploy_to_frontend_mainnet:
    name: Deploy to Frontend Mainnet
    runs-on: ubuntu-latest
    needs: [deploy_all_to_mainnet]
    environment: Production
    steps:
    - uses: actions/checkout@v3
    - name: Mimic Deployment
      run: |
        echo "Deploying Frontend Mainnet ..."