name: approve_all_workflow
on:
   workflow_dispatch:
    inputs:
      commitId:
        description: commit id
        required: true
jobs:
  get_pipelines:
    runs-on: ubuntu-latest
    steps:
      - name: find all waiting pipelines
        run: |
          for build in $(gh workflow list --all -R $OWNER/$REPO | grep -E '\brelease' | awk '{print $1}'); 
          do 
            gh run list -R $OWNER/$REPO -w $build --json name,headSha,status,url --jq '.[] | select((.headSha == '\"${{ inputs.commitId }}\"') and (.status == "waiting")) | {name,status,url}' | cat | head -n 1
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
  
  approve_pipelines:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: approve all waiting pipelines
        run: |
          gh extension install yuri-1987/gh-deploy
          for build in $(gh workflow list --all -R $OWNER/$REPO | grep -E '\brelease' | awk '{print $1}'); 
          do 
            RUN_ID==$(gh run list -R $OWNER/$REPO -w $build --json name,databaseId --jq '.[] | select((.headSha == '\"${{ inputs.commitId }}\"') and (.status == "waiting")) | .databaseId' | cat | head -n 1)
            echo "gh deploy --env prod --run-id $RUN_ID --repo magiceden/magiceden --approve"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}