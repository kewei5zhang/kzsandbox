name: deploy_all_mainnet

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: Image tag or commit SHA
        required: true
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
jobs:
  deploy_all_to_mainnet:
    # outputs:
    #   tag: ${{ steps.check-outcome.outputs.success }}
    runs-on: ubuntu-latest
    environment: Production
    # continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - release: acct-broker
            valuefile: ./mainnet/acct-broker-values.yaml
          - release: acct-backfill-broker
            valuefile: ./mainnet/acct-backfill-broker-values.yaml
          - release: acct-backfill
            valuefile: ./mainnet/acct-backfill-values.yaml
          - release: scripts
            valuefile: scripts
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.1
      # - name: sleep
      #   run: sleep 60
      # - name: Wait for build to succeed
      #   uses: lewagon/wait-on-check-action@v1.0.0
      #   with:
      #     ref: ${{ inputs.tag || github.sha }}
      #     check-name: 'Release all - Build Docker Image' # The same name as docker build job in release_all
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     wait-interval: 10
      #     allowed-conclusions: success,skipped
      - name: Deploy to EKS
        uses: ./.github/actions/deploy_eks
        with:
          tag: ${{ inputs.tag || github.sha }}
          namespace: indexing-mainnet
          release: ${{ matrix.release }}
          valuefile: ${{ matrix.valuefile }}
          chart: js/packages/backend
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          token: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Set Job Outcome
      #   id: check-outcome
      #   run: |
      #     if [ ${{ job.status }} == 'success' ]; then
      #       echo "success=true" >> $GITHUB_OUTPUT
      #     else
      #       echo "success=false" >> $GITHUB_OUTPUT
      #     fi

  # check-failure:
  #   runs-on: ubuntu-latest
  #   needs: deploy_all_to_mainnet
  #   if: always()
  #   steps:
  #     - name: Check for Failure in Matrix Jobs
  #       run: |
  #         failed=false
  #         for job in ${{ toJson(needs.deploy_all_to_mainnet.results) }}; do
  #           if [ $job == 'failure' ]; then
  #             failed=true
  #             break
  #           fi
  #         done
  #         echo "Failed: $failed"
  #         if [ $failed == true ]; then
  #           echo "One or more jobs failed."
  #           exit 1
  #         fi
  # deploy_to_frontend_mainnet:
  #   name: Deploy to Frontend Mainnet
  #   runs-on: ubuntu-latest
  #   needs: [deploy_all_to_mainnet]
  #   environment: Production
  #   steps:
  #   - uses: actions/checkout@v4.1.1
  #   - name: Mimic Deployment
  #     run: |
  #       echo "Deploying Mainnet ..."
